@import "fancybox";
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin bp($breakpoint) {
  @if map-has-key($break, $breakpoint) {
    @media (max-width: #{map-get($break, $breakpoint)}) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin respond-to-min($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: #{map-get($breakpoints, $breakpoint)+0.02px}) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@function color($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }

  @warn "Unknown `#{$key}` in $colors.";
  @return null;
}

@mixin placeholder {
    &::-webkit-input-placeholder {@content}
    &:-moz-placeholder           {@content}
    &::-moz-placeholder          {@content}
    &:-ms-input-placeholder      {@content}
}

// Flex styles

@mixin flex-center {
	justify-content: center;
	display: flex;
	align-items: center;
}

@mixin flex-col {
	flex-direction: column;
}

@mixin flex-start {
	justify-content: flex-start;
	display: flex;
	align-items: center;
}

@mixin flex-space {
	justify-content: space-between;
	display: flex;
	align-items: center;
}

@mixin flex-end {
	justify-content: flex-end;
	display: flex;
	align-items: center;
}


// global mod


// .section_in {
// 	max-width: 1550px;
// 	padding: 0 10px;
// }

// End global mod
